# Generated by Django 3.2.25 on 2024-07-03 14:55

import django.contrib.postgres.fields
from django.db import migrations, models
import officehours_api.models

def rename_flatpage(apps, schema_editor):
    FlatPage = apps.get_model('flatpages', 'FlatPage')
    Site = apps.get_model('sites', 'Site')

    # You will need to know which site or sites the FlatPage should be attached to.
    # This is often the `Site` object with `id=1` for the default site, but you might
    # have a specific site object in mind.
    site_id = 1  # Assuming we want to associate with the default site.
    try:
        default_site = Site.objects.get(id=site_id)
    except Site.DoesNotExist:
        default_site = None

    try:
        dataalert_page = FlatPage.objects.get(url='/dataalert/')
        dataalert_page.url = '/page-footer/'
        dataalert_page.save()
        if default_site:
            dataalert_page.sites.add(default_site)
    except FlatPage.DoesNotExist:
        new_page = FlatPage.objects.create(
            url='/page-footer/',
            title='Page Footer',
            content='<div>Default Content Here</div>',
        )
        if default_site:
            new_page.sites.add(default_site)

class Migration(migrations.Migration):

    dependencies = [
        ('officehours_api', '0026_auto_20240604_1620'),
        ('sites', '__latest__'),  # This ensures we have the latest sites migrations applied
    ]

    operations = [
        migrations.RunPython(rename_flatpage),
    ]
